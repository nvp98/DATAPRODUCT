@using Data_Product.Models
@using System.Security.Claims;
@using Data_Product.Repositorys;
@using Microsoft.EntityFrameworkCore;
@inject Data_Product.Repositorys.DataContext _context
@model List<Tbl_BM_16_GangLong>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script src="~/Content/assets/Chonse/chosen.jquery.js"></script>
<link href="~/Content/assets/Chonse/chosen.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<style>
	table th {
	text-align: center;
	}

	#dataTable input {
	border-radius: 0px !important;
	}

	th.toggle-col, td.toggle-col {
	display: none;
	}

	.is-invalid {
	border: 1px solid red !important;
	background-color: #ffe6e6 !important;
	}
	/* td.deleteItem {
	display: none;
	} */
	/* Container và table cần thiết lập overflow */
	.table-container {
		overflow-x: auto;
		position: relative;
	}

	table {
		border-collapse: collapse;
	}

	/* Sticky header chung */
	.sticky-header {
		position: sticky;
		left: 0;
		z-index: 10;
	}

	/* Cột Mã thùng (cột đầu tiên trong nhóm sticky) */
	th:nth-child(4), /* Vị trí thực tế của Mã thùng */
	td:nth-child(4) {
		position: sticky;
		left: 0;
		z-index: 10;
		width: 123.17px;
	}

	/* Cột Số mẻ */
	th:nth-child(5),
	td:nth-child(5) {
		position: sticky;
		left: 123.17px;
		z-index: 10;
		width: 123.06px;
	}

	/* Cột Thùng số */
	th:nth-child(6),
	td:nth-child(6) {
		position: sticky;
		left: 246.23px; /* Tổng width của Mã thùng + Số mẻ */
		z-index: 10;
		width: 56.7px;
	}

	/* Cột Giờ */
	th:nth-child(7),
	td:nth-child(7) {
		position: sticky;
		left: 302.93px; /* Tổng width các cột trước */
		z-index: 10;
		width: 48.89px;
	}

	/* Cột Phân loại */
	th:nth-child(8),
	td:nth-child(8) {
		position: sticky;
		left: 351.82px; /* Tổng width các cột trước */
		z-index: 10;
		width: 48.13px;
	}

	/* Đảm bảo header có z-index cao hơn */
	thead th {
		z-index: 20 !important;
}
</style>
@if (TempData["msgSuccess"] != null)
{
	@Html.Raw(TempData["msgSuccess"])
}
@if (TempData["msgError"] != null)
{
	@Html.Raw(TempData["msgError"])
}
@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";

	Pager pager = new Pager();
	int pageNo = 0;
	if (ViewBag.Pager != null)
	{
		pager = ViewBag.Pager;
		pageNo = pager.CurrentPage;
	}
}

@{
	var TenTaiKhoan = User.FindFirstValue(ClaimTypes.Name);
	var TaiKhoan = _context.Tbl_TaiKhoan.Where(x => x.TenTaiKhoan == TenTaiKhoan).FirstOrDefault();
	var PhongBan = _context.Tbl_PhongBan.Where(x => x.ID_PhongBan == TaiKhoan.ID_PhongBan).FirstOrDefault();
}
@using (Html.BeginForm("TaoPhieu", "BM16_GangThoi", FormMethod.Post, new { enctype = "multipart/form-data", id = "TaoPhieu" }))
{
	<div class="app-main__outer">
		<div class="app-main__inner" style="display:block;padding-bottom: 0px;">
			<div id="alertContainer" class="mt-3"></div>
			<div class="row">
				<div class="col mb-3">
					<label class="form-label">Mã phiếu:</label>
					<input type="text" class="form-control" value="@ViewBag.MaPhieu" readonly id="PhieuID" />
				</div>

				<div class="col mb-3">
					<label class="form-label">Ngày:</label>
					<input type="date" class="form-control" value="@ViewBag.NgayPhieuGang" readonly id="ID_Day" />
				</div>

				<div class="col mb-3">
					<label class="form-label">Tên kíp:</label>
					<input type="text" class="form-control" value="@ViewBag.TenKip" readonly @* id="IDKip" *@ />
				</div>

				<div class="col mb-3">
					<label class="form-label">Tên ca:</label>
					<input type="text" class="form-control" value="@ViewBag.TenCa" readonly id="IDCa" />
				</div>

				<div class="col mb-3">
					<label class="form-label">Tên lò cao:</label>
					<input type="text" class="form-control" value="@ViewBag.ID_Locao" readonly id="ID_Locao" />
				</div>
				<div class="col mb-3" hidden>
					<input type="text" class="form-control" value="@ViewBag.ID_Kip" readonly id="ID_Kip" />
				</div>
			</div>
			<div class="tab-content">
				<div class="row">
					<div class="card-body" style="padding-top: 0%; overflow-x: auto; font-size: 14px; z-index:1;">
						<div class="row w-100 justify-content-end mb-3">
							<div class="row">
								<div class="col-6">
								@* 	<p class="fw-bold text-danger" style="font-size:16px">
										Dữ liệu BK-MIS chỉ được cập nhật/làm mới đối với các thùng <u>CHƯA CHUYỂN</u> và <u>CHƯA XÁC NHẬN</u>
									</p> *@
								</div>
								<div class="col-6">
								@if (PhongBan?.TenNgan == "P.QLCL")
								{
									<button type="button" class="btn btn-info btnxacnhan">
										<i class="bi-check2-square"></i> Xác nhận
									</button>
								} else 
								{
									<button type="button" id="btnLuuThungMoi" class="btn btn-primary">
										<i class="bi bi-save"></i> Lưu
									</button>
									<button type="button" class="btn btn-secondary" id="btnLamMoi">
										<i class="bi bi-arrow-clockwise"></i>
										<span class="small pt-2 ps-1 text-white">Làm mới</span>
									</button>
									@* <button type="button" class="btn btn-success me-2 btnchuyenthung">
										<i class="bi bi-arrow-right-circle"></i> Chuyển
									</button>
									<button type="button" class="btn btn-danger btnthuhoi">
										<i class="bi bi-arrow-counterclockwise"></i> Thu hồi
									</button> *@

									<button type="button" class="btn btn-success btn-sm px-4" id="BtnXuatPhieuExcel" type="button">
										Xuất Excel
									</button>
									<button type="button" class="btn btn-success btn-sm px-4" id="BtnXuatPhieuPDF">Xuất PDF</button>
									<button id="toggleColumnsBtn" type="button" class="btn btn-outline-secondary btn-sm mb-2">
										Ẩn/Hiện
									</button>
								}
								</div>
							</div>
						</div>
						<div class="table-responsive" style="max-height: 700px; overflow-y: auto;">
							<table class="table table-bordered table-hover align-middle text-center" id="dataTable">
								<thead class="table-light sticky-top">
									<tr>
										@if (PhongBan?.TenNgan != "P.QLCL")
										{
											<th rowspan="2">Xóa</th>
											<th rowspan="2">Copy</th>
											<th rowspan="2">Chỉnh sửa</th>
										}
										<th rowspan="2">Mã thùng</th>
										<th rowspan="2">Số mẻ</th>
										<th rowspan="2">Thùng số</th>
										<th rowspan="2">Giờ</th>
										<th rowspan="2">Phân loại</th>
										<th rowspan="2">KL xe goong</th>
										<th rowspan="2">KL thùng</th>
										<th rowspan="2">KL thùng & gang lỏng</th>
										<th rowspan="2">KL gang lỏng cân ray</th>
										<th colspan="4">Vận chuyển đến</th>
										<th rowspan="2">Giờ NM</th>
										<th rowspan="2">Ghi chú</th>
										<th rowspan="2">
											<div style="font-size: 12px;">Chọn thùng</div>
											<input type="checkbox" id="selectAll" class="form-check-input" style="width: 20px; height: 20px;" title="Chọn tất cả">
										</th>
										<th rowspan="2">Tình trạng</th>
										<th rowspan="2" class="toggle-col">Nơi nhận </th>
										<th rowspan="2">Chốt thùng</th>
										<th rowspan="2">Xác nhận QLCL</th>

									</tr>
									<tr>
										<th>NM.HRC1</th>
										<th>NM.HRC2</th>
										<th>Đúc1</th>
										<th>Đúc2</th>
									</tr>
								</thead>
								<tbody>
									@if (ViewBag.DanhSachThung != null)
									{ 
										foreach (var item in ViewBag.DanhSachThung)
										{
											<tr>

												@if (PhongBan?.TenNgan != "P.QLCL")
												{
													<td class='text-center deleteItem'>
														@if (!item.MaThung.EndsWith(".00"))
													{ 
														<a class="btn btn-danger btn-sm" title="Xóa">
															<i class="bi bi-trash"></i>
														</a>
													}
													</td>
													<td class='text-center copyItem'>
														<a class="btn btn-secondary btn-sm" title="copy">
															<i class="bi bi-copy"></i>
														</a>
													</td>
													<td class='text-center editItem'>
														<a class="btn btn-primary btn-sm btn-edit-thung" title="Chỉnh sửa thùng"
													@* data-bs-target="#editThungModal" *@>
														<i class="bi bi-pen"></i>
													</a>
												</td>
												}
												<td name="maThung">@item.MaThung</td>
												<td name="soMe">@item.SoMe</td>
												<td name="ThungSo">@item.ThuTuThung</td>
												<td name="Gio">@item.GioNhaMay</td>
												<td name="PhanLoai">@item.PhanLoai</td>
												<td>
													<input type="number" name="KhoiLuongXeGoong" class="form-control" value="@item.KL_XeGoong" style="width: 70px; padding: 1px;" disabled />
												</td>
												<td>
													<input id="KLThung_${index}" name="KhoiLuongThung" type="number" step="0.01" min="0.01" class="form-control" value="@item.KL_Thung" style="width: 100px; padding: 4px;" disabled>
												</td>
												<td>
													<input id="KLThungGL_${index}" name="KLThungGangLong" type="number" step="0.01" min="0.01" class="form-control" value="@item.KL_Thung_GangLong" style="width: 100px; padding: 4px;" disabled>
												</td>
												<td>
													<input id="KLGLCR_${index}" name="KLGangLong" type="number" step="0.01" min="0.01" class="form-control" value="@item.KL_GangLong_CanRay" style="width: 100px; padding: 4px;" disabled>
												</td>
												<td><input type="checkbox" name="VanChuyenHRC1" @(item.DenHRC1 ? "checked" : "") disabled /></td>
												<td><input type="checkbox" name="VanChuyenHRC2" @(item.DenHRC2 ? "checked" : "") disabled /></td>
												<td><input type="checkbox" name="VanChuyenDUC1" @(item.DenDuc1 ? "checked" : "") disabled /></td>
												<td><input type="checkbox" name="VanChuyenDUC2" @(item.DenDuc2 ? "checked" : "") disabled /></td>
												<td><input type="time" name="GioNM" class="form-control" value="@item.GioNM" disabled></td>
												<td><textarea name="GhiChu" class="form-control" rows="2" style="width: 100px; resize: none; padding: 4px;" disabled>@item.GhiChu</textarea></td>
												<td><input type="checkbox" class="chon-thung-checkbox" /></td>
												<td name="TinhTrang">
													@if (item.DaChuyen)
													{
														<button type="button" class="btn btn-danger btn-sm">Chưa chuyển</button>
													}
													else
													{
														<button type="button" class="btn btn-success btn-sm">Đã chuyển</button>
													}
												</td>
												<td class="toggle-col">
													@if (item.NguoiNhanList != null && item.NguoiNhanList.Count > 0)
													{
														<ul style="width : 200px; font-size:13px">
															@foreach (var nguoiNhan in item.NguoiNhanList)
															{
																<li>@nguoiNhan</li>
															}
														</ul>
													}
												</td>
												<td name="ChotThung">
													@if (item.TrangThai == 1)
													{
														<button type="button" class="btn btn-danger btn-sm">Chưa chuyển</button>
													}
													else if (item.TrangThai == 2)
													{
														<button type="button" class="btn btn-warning btn-sm">Chờ xử lý</button>
													}
													else
													{
														<button type="button" class="btn btn-success btn-sm">Đã chốt</button>
													}
												</td>		

												<td name="XacNhan">
													@if(item.XacNhan == true)
													{
														<span class="badge bg-success">Đã xác nhận</span>
													}
													else
													{
														<span class="badge bg-secondary">Chưa xác nhận</span>
													}
												</td>
											</tr>
										}
									}
								</tbody>
								<tfoot>
								</tfoot>
							</table>
						</div>
					</div>

				</div>
			</div>
		</div>
	</div>
}
<!-- Modal -->
<div class="modal fade" id="editThungModal" tabindex="-1" aria-labelledby="editThungModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="editThungModalLabel">Chỉnh sửa thùng</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
			</div>
			<div class="modal-body">
				<input type="hidden" id="modalMaThungHidden" />

				<div class="row">
					<!-- Cột trái -->
					<div class="col-md-6">
						<div class="form-group mb-3">
							<label for="modalMaThung">Mã thùng</label>
							<input type="text" id="modalMaThung" class="form-control" />
						</div>

						<div class="form-group mb-3">
							<label for="modalSoMe">Số mẻ</label>
							<input type="text" id="modalSoMe" class="form-control" />
						</div>

						<div class="form-group mb-3">
							<label for="modalGio">Giờ</label>
							<input type="time" id="modalGio" class="form-control" />
						</div>

						<div class="form-group mb-3">
							<label for="modalPhanLoai">Phân loại</label>
							<input type="text" id="modalPhanLoai" class="form-control" />
						</div>

						<div class="form-group mb-3">
							<label for="modalKLXeGoong">KL xe goong</label>
							<input type="number" id="modalKLXeGoong" class="form-control" step="0.01" />
						</div>

						<div class="form-group mb-3">
							<label for="modalKLThung">KL thùng</label>
							<input type="number" id="modalKLThung" class="form-control" step="0.01" />
						</div>
					</div>

					<!-- Cột phải -->
					<div class="col-md-6">
						<div class="form-group mb-3">
							<label for="modalKLThungGangLong">KL thùng & gang lỏng</label>
							<input type="number" id="modalKLThungGangLong" class="form-control" step="0.01" />
						</div>

						<div class="form-group mb-3">
							<label for="modalKLGangLong">KL gang lỏng</label>
							<input type="number" id="modalKLGangLong" class="form-control" step="0.01" readonly />
						</div>

						<div class="form-group mb-3">
							<label class="form-label">Vận chuyển đến</label>
							<div class="row">
								<div class="col-6">
									<div class="form-check">
										<input class="form-check-input" type="checkbox" id="checkboxHRC1">
										<label class="form-check-label" for="checkboxHRC1">HRC1</label>
									</div>
									<div class="form-check">
										<input class="form-check-input" type="checkbox" id="checkboxHRC2">
										<label class="form-check-label" for="checkboxHRC2">HRC2</label>
									</div>
								</div>
								<div class="col-6">
									<div class="form-check">
										<input class="form-check-input" type="checkbox" id="checkboxDUC1">
										<label class="form-check-label" for="checkboxDUC1">Đúc 1</label>
									</div>
									<div class="form-check">
										<input class="form-check-input" type="checkbox" id="checkboxDUC2">
										<label class="form-check-label" for="checkboxDUC2">Đúc 2</label>
									</div>
								</div>
							</div>
						</div>

						<div class="form-group mb-3">
							<label for="modalGioNM">Giờ NM</label>
							<input type="time" id="modalGioNM" class="form-control" />
						</div>

						<div class="form-group mb-3">
							<label for="modalGhiChu">Ghi chú</label>
							<textarea id="modalGhiChu" class="form-control" rows="2" style="resize: none;"></textarea>
						</div>
					</div>
				</div>
			</div>

			<div class="modal-footer">
				<button type="button" id="btnLuuThung" class="btn btn-primary">Lưu</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
			</div>
		</div>
	</div>
</div>
<script>
	var soLuongMe = @(ViewBag.SoLuongMe ?? 0);
		$(document).ready(function()
		{
			// Chọn/bỏ chọn tất cả
			$('#selectAll').change(function() {
				$('.chon-thung-checkbox').prop('checked', $(this).prop('checked'));
			});

			// Kiểm tra trạng thái checkbox
			$('.chon-thung-checkbox').change(function() {
				const allChecked = $('.chon-thung-checkbox').length === $('.chon-thung-checkbox:checked').length;
				$('#selectAll').prop('checked', allChecked);
			});

			// Nút chuyển thùng
			// $('.btnchuyenthung').click(function() {
				
			// 	const maPhieu = $('#PhieuID').val() || 0;
			// 	const dsMaThung =[];
			// 	$('.chon-thung-checkbox:checked').each(function() {
			// 		const row = $(this).closest('tr');				
			// 		const maThung = row.find('td[name="maThung"]').text().trim();
			// 		const daChuyen = row.find('td[name="TinhTrang"] button').find('button').hasClass('btn-success');

			// 		if (daChuyen)
			// 			{
			// 				alert(`Thùng ${maThung} đã được chuyển trước đó`);
			// 				return false;
			// 			}

			// 		if (row.find('input[name="VanChuyenHRC1"]').is(':checked')) chuyenDen = "HRC1";
			// 		else if (row.find('input[name="VanChuyenHRC2"]').is(':checked')) chuyenDen = "HRC2";
			// 		else if (row.find('input[name="VanChuyenDUC1"]').is(':checked')) chuyenDen = "DUC1";
			// 		else if (row.find('input[name="VanChuyenDUC2"]').is(':checked')) chuyenDen = "DUC2";


			// 		dsMaThung.push({
			// 			MaThungGang:maThung,
			// 			ChuyenDen:chuyenDen
			// 		});
			// 	});
				
			// 	if (dsMaThung.length === 0)
			// 		{
			// 			alert('Vui lòng chọn ít nhất một thùng');
			// 			return;
			// 		}

			// 	if (confirm(`Bạn có chắc chắn muốn chuyển ${dsMaThung.length} thùng đã chọn?`))
			// 	{
			// 		const requestData = {
			// 			MaPhieu: maPhieu,
			// 			DsMaThung: dsMaThung
			// 		};
			// 		//console.log('requestData',requestData)
			// 		chuyenThung(requestData);
			// 	}
			// 	});
			
			// // Nút thu hồi thùng
			// $('.btnthuhoi').click(function()
			// {
			// 	const maPhieu = $('#PhieuID').val() || 0;
			// 	const selectedMaThungs = [];
			// 	let hasError = false;
			// 	$('.chon-thung-checkbox:checked').each(function () {
			// 		const row = $(this).closest('tr');
			// 		const maThung = row.find('td[name="maThung"]').text().trim();
			// 		const daChuyen = row.find('td[name="TinhTrang"] button').text().trim();
			// 		const tinhTrang = row.find('td[name="ChotThung"] button').text().trim();

			// 		if (daChuyen !== "Đã chuyển") {
			// 			alert(`Thùng ${maThung} chưa chuyển, không thể thu hồi`);
			// 			hasError = true;
			// 			return false; // thoát each
			// 		}

			// 		if (tinhTrang !== "Chờ xử lý") {
			// 			alert(`Thùng ${maThung} không ở trạng thái 'Chờ xử lý', không thể thu hồi`);
			// 			hasError = true;
			// 			return false; // thoát each
			// 		}

			// 		if (row.find('input[name="VanChuyenHRC1"]').is(':checked')) chuyenDen = "HRC1";
			// 		else if (row.find('input[name="VanChuyenHRC2"]').is(':checked')) chuyenDen = "HRC2";
			// 		else if (row.find('input[name="VanChuyenDUC1"]').is(':checked')) chuyenDen = "DUC1";
			// 		else if (row.find('input[name="VanChuyenDUC2"]').is(':checked')) chuyenDen = "DUC2";

			// 	  selectedMaThungs.push({
			// 			MaThungGang: maThung,
			// 			ChuyenDen: chuyenDen
			// 		});
			// 	});
			// 	if (hasError) return;
			// 	if (selectedMaThungs.length === 0)
			// 	{
			// 		alert('Vui lòng chọn ít nhất một thùng để thu hồi');
			// 		return;
			// 	}

			// 	if (confirm(`Bạn có chắc chắn muốn thu hồi ${selectedMaThungs.length} thùng đã chọn?`))
			// 	{
			// 		const requestData = {
			// 			MaPhieu: maPhieu,
			// 			DsMaThung: selectedMaThungs
			// 		};
			// 		//console.log('====thu hoi===',requestData)
			// 		thuHoiThung(requestData);
					
			// 	}
			// });

			// xác nhận thùng
			$('.btnxacnhan').click(function () {
				const maPhieu = $('#PhieuID').val() || 0;
				const selectedMaThungs = [];

				$('.chon-thung-checkbox:checked').each(function () {
					const row = $(this).closest('tr');
					const maThung = row.find('td[name="maThung"]').text().trim();

					selectedMaThungs.push({
						MaThungGang: maThung
					});
				});

				if (selectedMaThungs.length === 0) {
					alert('Vui lòng chọn ít nhất một thùng để xác nhận');
					return;
				}

				if (confirm(`Xác nhận ${selectedMaThungs.length} thùng đã chọn?`)) {
					const requestData = {
						MaPhieu: maPhieu,
						DsMaThung: selectedMaThungs
					};
					console.log ('requestData',requestData);
					XacNhanThung(requestData); // Gọi API
				}
			});
			// Ẩn/hiện cột
			let isHidden = true;
			$('#toggleColumnsBtn').on('click', function() {
				if (isHidden) {
					$('th.toggle-col, td.toggle-col').show();
				} else {
					$('th.toggle-col, td.toggle-col').hide();
				}
				isHidden = !isHidden;
			});

			$("#btnLamMoi").click(function() {
			
				loadThemSoMeMoi();
			});

			 $("#btnLuuThungMoi").click(function () {
				
				 saveGangThoiVaoPhieu();
			});
			$('#BtnXuatPhieuExcel').on('click', function () {
				var maPhieu = $("#PhieuID").val();
				exportExcel(maPhieu);
			});
			  $("#BtnXuatPhieuPDF").click(function() {
				ExportToPDF();
				})
			});
			$(document).on("click", ".deleteItem", function () {
				const row = $(this).closest("tr");
				const maThung = row.find('td[name="maThung"]').text().trim();
				const tinhTrang = row.find('td[name="ChotThung"] button').text().trim();

				if (tinhTrang == 'Đã chốt' || maThung.endsWith(".00")) {
					alert("Không thể xóa");
					return;
				}
				// Trường hợp 1: Dòng sao chép (data-new="true")
				if (row.attr("data-new") === "true") {
					if (confirm("Có muốn xóa thùng này")) {
						row.remove();
					}
				}
				// Trường hợp 2: Dòng không phải copy nhưng không phải thùng gốc (VD: .01, .02,...)
				else if (!maThung.endsWith(".00")) {
					if (confirm("Có chắc muốn xóa thùng copy này?")) {
						$.ajax({
							url: '/BM16_GangThoi/Xoathungcopy',
							method: 'POST',
							contentType: 'application/json',
							data: JSON.stringify(maThung),
							success: function (response) {
								alert(response.message);
								row.remove();
							},
							error: function (err) {
								alert("Xóa thất bại: " + (err.responseJSON?.message || "Lỗi không xác định"));
							}
						});
					}
				}
				// Trường hợp 3: Là thùng gốc (.00) → không cho xóa
				else {
					alert("Không được xóa thùng gốc.");
				}
				});
				// ===== Function==========

			// // Hàm gọi API chuyển thùng
			// function chuyenThung(dsthung)
			// {
			// 	$.ajax({
			// 		url: '@Url.Action("ChuyenThung", "BM16_GangThoi")',
			// 		type: 'POST',
			// 		contentType: 'application/json',
			// 		data: JSON.stringify(dsthung),
			// 		success: function(response) {
			// 			if (response.success) {
			// 				alert(response.message);
			// 				location.reload();
			// 			} else {
			// 				alert(response.message);
			// 			}
			// 		},
			// 		error: function() {
			// 			alert('Có lỗi xảy ra khi gửi yêu cầu');
			// 		}
			// 	});
			//  }
			// function thuHoiThung(dsMaThung)
			// {
			// 	$.ajax({
			// 		url: '@Url.Action("ThuHoiThung", "BM16_GangThoi")',
			// 		type: 'POST',
			// 		contentType: 'application/json',
			// 		data: JSON.stringify(dsMaThung),
			// 		success: function (response) {
			// 			   showAlert(response.message, response.success ? 'success' : 'danger');
			// 				if (response.success) {
			// 				  setTimeout(() => {
			// 					location.reload();
			// 				  }, 2000); // Đợi 2s cho người dùng đọc alert
			// 				}
			// 			  },
			// 			  error: function () {
			// 				showAlert('Có lỗi xảy ra khi gửi yêu cầu thu hồi thùng', 'danger');
			// 			  }
			// 			});
			// }
			function showAlert(message, type) {
				const alertHtml = `
					<div class="alert alert-${type} alert-dismissible fade show" role="alert">
						${message}
						<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Đóng"></button>
					</div>
					`;
				const alertContainer = document.getElementById('alertContainer');
			alertContainer.innerHTML = alertHtml;

				// Tự động ẩn sau 5 giây
				setTimeout(() => {
				const alert = alertContainer.querySelector('.alert');
				if (alert) {
					alert.classList.remove('show');
					alert.classList.add('hide');
				}
				}, 5000);
			}
			// Hàm tạo mã thùng
			function generateMaThung(dateStr, loCao, ca, stt) {
					const date = new Date(dateStr);
					const dd = String(date.getDate()).padStart(2, '0');
					const mm = String(date.getMonth() + 1).padStart(2, '0');
					const yy = String(date.getFullYear()).slice(-2);
					//const caChar = (ca === '1') ? 'N' : 'D';
					const caChar = (ca === '1') ? 'N' : 'D';
					const sttFormatted = String(stt).padStart(3, '0');

					return `${dd}${mm}${yy}L${loCao}${caChar}${sttFormatted}.00`;
			}
			function getLastThungIndex() {
				let maxIndex = 0;
				$("#dataTable tbody td[name='maThung']").each(function () {
					let ma = $(this).text().trim();
					let match = ma.match(/(\d{3})\.00$/);
					if (match) {
						let num = parseInt(match[1]);
						if (num > maxIndex) {
							maxIndex = num;
						}
					}
				});
				return maxIndex;
			}
			function loadThemSoMeMoi() {
				let ngay = $("#ID_Day").val();
				let idLoCao = $("#ID_Locao").val();
				let idKip = $("#ID_Kip").val();
				let idca = $("#IDCa").val();

				let tableBody = $("#dataTable tbody");
				let soMeHienTai = [];

				// Lấy danh sách mẻ hiện tại
				tableBody.find("tr").each(function () {
					let maThung = $(this).find("td[name='maThung']").text().trim();
					let soMe = $(this).find("td[name='soMe']").text().trim();
					let tinhTrang = $(this).find("td[name='TinhTrang'] button").text().trim();
					let chotThung = $(this).find("td[name='ChotThung'] button").text().trim();

					if (soMe) {
						soMeHienTai.push({
							maThung:maThung,
							soMe: soMe,
							tinhTrang: tinhTrang,
							chotThung: chotThung
						});
					}
				});

				let lastIndex = getLastThungIndex();
				let updateList = [];
				let listSoMeHienTai = soMeHienTai.map(x => x.soMe);
			$.ajax({
				url: "/BM16_GangThoi/GetSoMeGangBKMis",
				type: "GET",
				data: { ngay, ID_LoCao: idLoCao, IDKip: idKip },
				success: function (data) {
					let soMeMoi = data.map(item => item.testPatternCode || "");
					let soMeCanXoa = listSoMeHienTai.filter(x => !soMeMoi.includes(x));

					$.ajax({
						url: "/XeGoong/KLXeLoCao",
						type: "GET",
						data: { idlocao: idLoCao },
						success: function (xeData) {
							let klxe = (xeData.success && xeData.klXe) ? xeData.klXe : "";

							data.forEach(item => {
								let soMe = item.testPatternCode || "";
								//let matched = soMeHienTai.find(x => x.soMe === soMe);
								let allMatched = soMeHienTai.filter(x => x.soMe === soMe);
								//console.log('matched:', matched);
								if (allMatched.length === 0) {
									lastIndex++;
									let maThung = generateMaThung(ngay, idLoCao, idca, lastIndex);
									let thungSo = soMe.length >= 2 ? soMe.slice(-2) : "";
									let phanLoai = item.classifyName || "";
									let time = item.patterntime ? item.patterntime.replace(/H/g, ":") : "";

									let row = `
										<tr class="row-new" data-new="true" data-so-me="${soMe}">
										<td class='text-center deleteItem'><a class="btn btn-danger btn-sm"><i class="bi bi-trash"></i></a></td>
											<td class='text-center copyItem'><a class="btn btn-secondary btn-sm"><i class="bi bi-copy"></i></a></td>
											<td class='text-center editItem'><a class="btn btn-primary btn-sm copyRowBtn"><i class="bi bi-pen"></i></a></td>
											<td name="maThung">${maThung}</td>
											<td name="soMe">${soMe}</td>
											<td name="ThungSo">${thungSo}</td>
											<td name="Gio">${time}</td>
											<td name="PhanLoai">${phanLoai}</td>
											<td><input type="number" name="KhoiLuongXeGoong" class="form-control" value="${klxe}" style="width: 100px;" required></td>
											<td><input name="KhoiLuongThung" type="number" class="form-control" style="width: 100px;" required></td>
											<td><input name="KLThungGangLong" type="number" class="form-control" style="width: 100px;" required></td>
											<td><input name="KLGangLong" type="number" class="form-control" style="width: 100px;"></td>
											<td><input type="checkbox" name="VanChuyenHRC1" class="form-check-input"></td>
											<td><input type="checkbox" name="VanChuyenHRC2" class="form-check-input"></td>
											<td><input type="checkbox" name="VanChuyenDUC1" class="form-check-input"></td>
											<td><input type="checkbox" name="VanChuyenDUC2" class="form-check-input"></td>
											<td><input type="time" name="GioNM" class="form-control"></td>
											<td><textarea name="GhiChu" class="form-control" style="width: 100px;"></textarea></td>
											<td><input type="checkbox" class="chon-thung-checkbox"/></td>
											<td></td>
											<td></td>
											<td class="toggle-col"></td>
												<td></td>
										</tr>`;
									tableBody.append(row);
								} else {

									allMatched.forEach(matched => {
									if (matched.tinhTrang === "Chưa chuyển" &&
										(matched.chotThung === "Chưa chuyển" || matched.chotThung === "Chờ xử lý")) {

										updateList.push({
											MaThungGang: matched.maThung,
											BKMIS_SoMe: soMe,
											BKMIS_PhanLoai: item.classifyName || "",
											BKMIS_Gio: item.patterntime || ""
										});
									}
								});
								}
							});

								// Gửi mẻ cần cập nhật
							if (updateList.length > 0) {
								const maPhieu = $('#PhieuID').val()?.trim();
									const requestData = {
										maPhieu: maPhieu,
										DsMaThung: updateList
									};
								$.ajax({
									url: "/BM16_GangThoi/CapNhatThungChuaChuyen",
									type: "POST",
									contentType: "application/json",
									data: JSON.stringify(requestData),
									success: function () {
										alert("Đã cập nhật thùng chưa chuyển & chưa chốt.");
									},
									error: function () {
										alert("Lỗi khi cập nhật thùng.");
									}
								});
							}

							// Gửi mẻ cần xóa
							if (soMeCanXoa.length > 0) {
								const maPhieu = $('#PhieuID').val()?.trim();
									const requestData = {
										maPhieu: maPhieu,
										soMes: soMeCanXoa
									};
						//console.log('requestData',requestData)
								$.ajax({
									url: "/BM16_GangThoi/XoaNhungSoMeKhongConTrongBK",
									type: "POST",
									contentType: "application/json",
									data: JSON.stringify(requestData),
									success: function () {
										alert(" Đã xóa các số mẻ không còn trong danh sách mới.");
										// Xóa dòng tương ứng trên UI
										tableBody.find("tr").each(function () {
											let soMe = $(this).find("td[name='soMe']").text().trim();
											if (soMeCanXoa.includes(soMe)) {
												$(this).remove();
											}
										});
									},
									error: function () {
										alert(" Lỗi khi xóa số mẻ cũ.");
									}
								});
							}
						}
					});
				}
			});
		}
		////==================///////////
		function saveGangThoiVaoPhieu() {
			let phieuID = $("#PhieuID").val();
			let idLoCao = $("#ID_Locao").val();
			let idKip = $("#ID_Kip").val();
			let ngay = $("#ID_Day").val();
			let danhSachThung = [];
			let isValidAll = true;
		
			$("#dataTable tbody tr[data-new='true']").each(function () {
				let row = $(this);
				let isValid = true;
				row.find("input, textarea").removeClass("is-invalid");
				let vanChuyenHRC1 = row.find("input[name='VanChuyenHRC1']").is(":checked");
				let vanChuyenHRC2 = row.find("input[name='VanChuyenHRC2']").is(":checked");
				let vanChuyenDUC1 = row.find("input[name='VanChuyenDUC1']").is(":checked");
				let vanChuyenDUC2 = row.find("input[name='VanChuyenDUC2']").is(":checked");

				// Xác định nơi chuyển đến
				let chuyenDen = vanChuyenHRC1 ? "HRC1" :
								vanChuyenHRC2 ? "HRC2" : 
								vanChuyenDUC1 ? "DUC1" :
								vanChuyenDUC2 ? "DUC2" :
								"KHONG_XAC_DINH";

				let khoiLuongXe = parseFloat(row.find("input[name='KhoiLuongXeGoong']").val());
				let khoiLuongThung = parseFloat(row.find("input[name='KhoiLuongThung']").val());
				let klThungGangLong = parseFloat(row.find("input[name='KLThungGangLong']").val());
				let klGangLong = parseFloat(row.find("input[name='KLGangLong']").val());
				let gioNM = row.find("input[name='GioNM']").val()?.trim();

				// Validate
				if (isNaN(khoiLuongXe) || khoiLuongXe <= 0) {
					row.find("input[name='KhoiLuongXeGoong']").addClass("is-invalid");
					isValid = false;
				}
				if (isNaN(khoiLuongThung) || khoiLuongThung <= 0) {
					row.find("input[name='KhoiLuongThung']").addClass("is-invalid");
					isValid = false;
				}
				if (isNaN(klThungGangLong) || klThungGangLong <= 0) {
					row.find("input[name='KLThungGangLong']").addClass("is-invalid");
					isValid = false;
				}
				if (isNaN(klGangLong) || klGangLong <= 0) {
					row.find("input[name='KLGangLong']").addClass("is-invalid");
					isValid = false;
				}
				if (chuyenDen === "KHONG_XAC_DINH") {
				row.find("input[name^='VanChuyen']").addClass("is-invalid");
				isValid = false;
				}
				if (!gioNM) {
					row.find("input[name='GioNM']").addClass("is-invalid");
					isValid = false;
				}

				if (!isValid) {
					isValidAll = false;
					return; // skip this row
				}
				danhSachThung.push({
					MaThungGang: row.find("td[name='maThung']").text().trim(),
					BKMIS_SoMe: row.find("td[name='soMe']").text().trim(),
					BKMIS_ThungSo: row.find("td[name='ThungSo']").text().trim(),
					BKMIS_Gio: row.find("td[name='Gio']").text().trim(),
					BKMIS_PhanLoai: row.find("td[name='PhanLoai']").text().trim(),
					KL_XeGoong: parseFloat(row.find("input[name='KhoiLuongXeGoong']").val()) || 0,
					G_KLThungChua: parseFloat(row.find("input[name='KhoiLuongThung']").val()) || 0,
					G_KLThungVaGang: parseFloat(row.find("input[name='KLThungGangLong']").val()) || 0,
					G_KLGangLong: parseFloat(row.find("input[name='KLGangLong']").val()) || 0,
					ChuyenDen: chuyenDen,
					Gio_NM : row.find("input[name='GioNM']").val() || 0,
					G_GhiChu: row.find("textarea[name='GhiChu']").val()
				});
				
			});
				if (!isValidAll) {
				alert("Vui lòng kiểm tra lại các ô dữ liệu bị đánh dấu đỏ.");
				return;
			}

			// Tạo object gửi lên controller
			const dataToSend = {
				MaPhieu: phieuID,
				ID_LoCao: parseInt(idLoCao),
				ID_Kip: parseInt(idKip),
				NgayPhieuGang:ngay,
				DanhSachThung: danhSachThung
			};

			//console.log("==dataToSend==",dataToSend)

			$.ajax({
				url: "/BM16_GangThoi/SaveThung",
				type: "POST",
				contentType: "application/json",
				data: JSON.stringify(dataToSend),
				success: function (res) {
					alert(res.message || "Lưu thành công!");
					location.reload();
				},
				error: function (err) {
					alert("Lỗi khi lưu: " + err.responseText);
				}
			});
		}
		$(document).on("input", "input[name='KhoiLuongThung'], input[name='KLThungGangLong']", function () {
			let row = $(this).closest("tr");

			let klThung = parseFloat(row.find("input[name='KhoiLuongThung']").val()) || 0;
			//console.log("====",klThung)
			let klThungGL = parseFloat(row.find("input[name='KLThungGangLong']").val()) || 0;
			//console.log("==klThungGL==",klThungGL)
			let klGLCR = klThungGL - klThung;
			//console.log("==klGLCR==",klGLCR)
			row.find("input[name='KLGangLong']").val(klGLCR > 0 ? klGLCR.toFixed(2) : 0);
		});

		$(document).ready(function() {
			function tinhTongKL() {
				let tong = 0;

				$('input[name="KLGangLong"]').each(function() {
					let val = parseFloat($(this).val());
					if (!isNaN(val)) {
						tong += val;
					}
				});

				$('#dataTable tbody tr.tong-row').remove();

			let tongRow = `
				<tr class="tong-row" style="font-weight:bold; background-color:#f0f0f0;">
					<td colspan="4"></td>
					<td>${soLuongMe}</td>
					<td colspan="6"></td>
					<td>${tong.toFixed(2)}</td>
					<td colspan="15"></td>
				</tr>
			`;

		$('#dataTable tfoot').html(tongRow);
			}
			tinhTongKL();
				});
		$(document).on('click', '.btn-edit-thung', function () {
			const row = $(this).closest('tr');
			const chotThung = row.find('td[name="ChotThung"] button').text().trim();
			const tinhTrang = row.find('td[name="TinhTrang"] button').text().trim();
			console.log(tinhTrang)
			if (tinhTrang == "Đã chuyển" || chotThung == "Đã chốt" ){
				alert ("Trạng thái không phù hợp không được chỉnh sửa")
				return;
			}
			const data = {
				maThung: row.find('td:eq(3)').text().trim(),
				soMe: row.find('td:eq(4)').text().trim(),
				gio: row.find('td:eq(6)').text().trim(),
				phanLoai: row.find('td:eq(7)').text().trim(),
				klXeGoong: parseFloat(row.find('td:eq(8) input').val()) || 0,
				klThung: parseFloat(row.find('td:eq(9) input').val()) || 0,
				klThungVaGang: parseFloat(row.find('td:eq(10) input').val()) || 0,
				klGangLong: parseFloat(row.find('td:eq(11) input').val()) || 0,
				gioNM: row.find('input[name="GioNM"]').val() || 0,
				ghiChu: row.find('td:eq(17)').text().trim(),

				chuyenDen: '',

			};
			//console.log ('====data edit====',data)
			// Ghép chuyển đến dựa vào checkbox:
			const den = [];
			if (row.find('td:eq(12) input').is(':checked')) den.push('HRC1');
			if (row.find('td:eq(13) input').is(':checked')) den.push('HRC2');
			if (row.find('td:eq(14) input').is(':checked')) den.push('DUC1');
			if (row.find('td:eq(15) input').is(':checked')) den.push('DUC2');
			data.chuyenDen = den.join(',');
			// Gán vào biến toàn cục
		
			window.thungData = data;
				//console.log('==window.thungData===',window.thungData)
				//console.log('==data===',data)



					//console.log('==gioNM===',gioNM)
			// Đổ dữ liệu vào modal
			$('#modalMaThungHidden').val(data.maThung);
			$('#modalMaThung').val(data.maThung).prop('disabled', true);
			$('#modalSoMe').val(data.soMe).prop('disabled', true);
			$('#modalGio').val(data.gio).prop('disabled', true);
			$('#modalPhanLoai').val(data.phanLoai).prop('disabled', true);

			$('#modalKLGangLong').val(data.klGangLong);
			$('#modalKLThung').val(data.klThung);
			$('#modalKLThungGangLong').val(data.klThungVaGang);
			$('#modalKLXeGoong').val(data.klXeGoong).prop('disabled',true);
			$('#modalGioNM').val(data.gioNM);
			$('#modalGhiChu').val(data.ghiChu);

			// Set checkbox
			const cdList = data.chuyenDen.split(',');
			$('#checkboxHRC1').prop('checked', cdList.includes('HRC1'));
			$('#checkboxHRC2').prop('checked', cdList.includes('HRC2'));
			$('#checkboxDUC1').prop('checked', cdList.includes('DUC1'));
			$('#checkboxDUC2').prop('checked', cdList.includes('DUC2'));

			$('#editThungModal').modal('show');
			});
			$('#btnLuuThung').on('click', function () {
			if (!window.thungData) {
				alert("Không có dữ liệu thùng để lưu.");
				return;
			}

			// Cập nhật dữ liệu từ modal (nếu có sửa)
			window.thungData.MaThungGang = $('#modalMaThung').val().trim();
			window.thungData.KL_XeGoong = parseFloat($('#modalKLXeGoong').val()) || 0;
			window.thungData.G_KLThungChua = parseFloat($('#modalKLThung').val()) || 0;
			window.thungData.G_KLThungVaGang = parseFloat($('#modalKLThungGangLong').val()) || 0;
			window.thungData.G_KLGangLong = parseFloat($('#modalKLGangLong').val()) || 0;
			window.thungData.G_GhiChu = $('#modalGhiChu').val().trim();
			window.thungData.Gio_NM = $('#modalGioNM').val().trim();
			window.thungData.ChuyenDen = [
				$('#checkboxHRC1').is(':checked') ? 'HRC1' : '',
				$('#checkboxHRC2').is(':checked') ? 'HRC2' : '',
				$('#checkboxDUC1').is(':checked') ? 'DUC1' : '',
				$('#checkboxDUC2').is(':checked') ? 'DUC2' : ''
			].filter(x => x).join(',');

			$.ajax({
				url: '/BM16_GangThoi/EditThung',
				type: 'POST',
				contentType: 'application/json',
				data: JSON.stringify(window.thungData),
				success: function (res) {
					if (res.success) {
						alert( res.message);
						location.reload();
					} else {
						alert('Lỗi ' + res.message);
					}
				},
				error: function (err) {
					console.error("Lỗi gọi API EditThung:", err);
					alert('Lỗi máy chủ khi lưu.');
				}
			});
		});
	function exportExcel(maPhieu) {
			if (!maPhieu) {
				alert("Không có mã phiếu!");
				return;
			}

			$.ajax({
				url: '/BM16_GangThoi/ExportToExcel',
				method: 'GET',
				data: { MaPhieu: maPhieu },
				xhrFields: {
					responseType: 'blob'
				},
				success: function (data, status, xhr) {
					var blob = new Blob([data], {
						type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
					});

					var fileName = `Phieu_${maPhieu}_${new Date().toISOString().slice(0,10)}.xlsx`;

					var a = document.createElement('a');
					a.href = window.URL.createObjectURL(blob);
					a.download = fileName;
					document.body.appendChild(a);
					a.click();
					document.body.removeChild(a);
				},
				error: function () {
					alert("Lỗi khi xuất Excel!");
				}
			});
		}

		$(document).on("click", ".copyItem", function () {
		const row = $(this).closest("tr");
			const trangThai = row.find("td[name='ChotThung']").text().trim().toLowerCase();

			// Kiểm tra nếu thùng đã chốt
			if (trangThai === "đã chốt") {
				alert("Thùng này đã được chốt và không thể sao chép.");
				return;
			}
			const clonedRow = row.clone();
			//console.log("clonedRow",clonedRow)
			const maThungCell = row.find("td[name='maThung']");
			let maThung = maThungCell.text().trim();

			let [prefix, _] = maThung.split(".");

			// Tìm hậu tố lớn nhất có cùng tiền tố
			let maxSuffix = 0;
			$("td[name='maThung']").each(function () {
				let text = $(this).text().trim();
				let [pfx, sfx] = text.split(".");
				if (pfx === prefix) {
					let number = parseInt(sfx, 10);
					if (!isNaN(number)) {
						maxSuffix = Math.max(maxSuffix, number);
					}
				}
			});

			// Sinh mã mới
			let newMaThung = `${prefix}.${(maxSuffix + 1).toString().padStart(2, '0')}`;
			clonedRow.find("td[name='maThung']").text(newMaThung);

			// Đánh dấu dòng mới
			clonedRow.attr("data-new", "true");


			// clonedRow.find("input[type='text'], input[type='number'], textarea").each(function () {
			// 	$(this).val('');
			// 	$(this).prop("disabled", false);
			// });
				clonedRow.find("input, textarea").each(function () {
				if (this.type === "checkbox") {
					$(this).prop("checked", false);
				} else {
					$(this).val('');
				}
				$(this).prop("disabled", false);
			});

			//console.log('clonedRow====',clonedRow)
			
			// Chèn vào đúng vị trí theo thứ tự tăng dần mã thùng
			let inserted = false;
			$("#dataTable tbody tr").each(function () {
				const currentCell = $(this).find("td[name='maThung']");
				if (currentCell.length > 0) {
					let currentMaThung = currentCell.text().trim();
					if (currentMaThung > newMaThung) {
						clonedRow.insertBefore($(this));
						inserted = true;
						return false;
					}
				}
			});

			if (!inserted) {
				$("#dataTable tbody").append(clonedRow);
			}
			});
		$(document).ready(function() {
		  $('#modalKLThung, #modalKLThungGangLong').on('input', function() {
			const klThung = parseFloat($('#modalKLThung').val()) || 0;
			const klThungVaGang = parseFloat($('#modalKLThungGangLong').val()) || 0;
			const klGangLong = klThungVaGang - klThung;

			$('#modalKLGangLong').val(klGangLong.toFixed(2));
		  });
		});

	function ExportToPDF(){
		// value cac field
		const MaPhieu = $('#PhieuID').val() || null;

		fetch('/BM16_GangThoi/ExportToPDF', {
			method: 'POST',
			headers: { 'Content-Type': 'application/json' },
			body: JSON.stringify(MaPhieu)
		})
		.then(async res => {
		if (!res.ok) {
			// Lấy nội dung lỗi từ response
			const errorText = await res.text();
			alert("Xuất PDF thất bại: " + errorText);
			throw new Error("Lỗi khi xuất PDF");
		}
		return res.blob();
	 })
		.then(blob => {
			const url = window.URL.createObjectURL(blob);
			const a = document.createElement('a');
			a.href = url;
			a.download = 'BBGN Gang long - Luyen Gang.pdf';
			a.click();
			window.URL.revokeObjectURL(url);
		});
	}
	function XacNhanThung(data)
		{
		$.ajax({
				url: '/BM16_GangThoi/XacNhanThung',
				type: 'POST',
				contentType: 'application/json',
				data: JSON.stringify(data),
				success: function (res) {
					alert('Xác nhận thành công!');
					location.reload();
				},
				error: function () {
					alert('Lỗi khi xác nhận thùng');
				}
		});
		}

</script>
